@inject HttpClient Http
@page "/"

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

<div class="col-6">
    <div class="alert alert-info" role="alert">
        Standard low-code solution Blazor Component to printing HTML to PDF using the browser's print screen.
    </div>

    @if (forecasts != null)
    {
        <PrintComponent ButtonText="Print Forecast" PageName="Forecast Data" ShowPrintableContent>
            <div class="alert alert-primary" role="alert">
                Weather Forcast
            </div>
            <table class="table">
                <thead>
                    <tr>
                        <th>Date</th>
                        <th>Temp. (C)</th>
                        <th>Temp. (F)</th>
                        <th>Summary</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var forecast in forecasts)
                    {
                        <tr>
                            <td>@forecast.Date.ToShortDateString()</td>
                            <td>@forecast.TemperatureC</td>
                            <td>@forecast.TemperatureF</td>
                            <td>@forecast.Summary</td>
                        </tr>
                    }
                </tbody>
            </table>
        </PrintComponent>    
    }
</div>

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateTime Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}